segment p 0000
br 0x00000000 always// reset vector
data 0800
br 0x00000000 always
data 3000
br 0x00000000 always
data 3000
br 0x00000000 always // int0
data 3000
data 0000
data 0000
data 0000
data 0000
data 0000
data 0000
br 0x00000000 always // int1
data 3000
data 0000
data 0000
data 0000
data 0000
data 0000
data 0000
br 0x00000000 always // int2
data 3000

segment p 0800 // pre-write shutdown sequence
load 0x0080u8 page
clr b0 always
mov b0l [page:0x00c8u8] // T_REPLY2
br 0x00000000 always // jump to epilogue first to dump the initial register value
data 1000

segment p 1000 // Main loop
load 0x0000u8 page
mov [page:0x0000u8] b0l // get signal
br 0x00000000 eq // loop back if no signal
data 1000

mov [page:0x0001u8] b0l // get command type

cmpv 0x0000 b0l
data 0000
br 0x00000000 eq
data 2000

cmpv 0x0000 b0l
data 0001
br 0x00000000 eq
data 3000

br 0x00000000 always
data 4000

segment p 2000 // read
mov [page:0x0002u8] r0
mov [r0] r1
mov r1 [page:0x0003u8]
br 0x00000000 always
data 4000

segment p 3000 // write
mov [page:0x0002u8] r0
mov [page:0x0003u8] r1
mov r1 [r0]
br 0x00000000 always
data 4000

segment p 4000 // end
clr b0 always
mov b0l [page:0x0000u8] // clear signal
br 0x00000000 always
data 1000 // loop back



segment d 0000 // signal area
data 0000 // Start signal
data 0000 // Operation type
data 0000 // Address
data 0000 // Data
